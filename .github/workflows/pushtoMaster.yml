---
name: Push to Master - Workflow
'on':
  # Trigger this workflow on a push to the master branch
  # Work runs all linter checks, and tests if they are successful it builds and deploys application
  push:
    branches:
      - master
jobs:
  spell-check:
    name: markdown spell check
    runs-on: ubuntu-latest
    steps:
      - name: Check out code.
        uses: actions/checkout@v2
      - name: Spelling check via PySpelling
        uses: sbates130272/spellcheck-github-actions@v0.7.0
  super-linter:
    # Job name
    name: lint-code-base-using-super-linter
    # Set the agent to run on
    runs-on: ubuntu-latest
    # Load all steps
    steps:
      # Checkout the code base
      - name: Check out code
        uses: actions/checkout@v2
      # Run Linter against code base
      - name: Lint code base
        uses: docker://github/super-linter:v3.3.2
        env:
          VALIDATE_ALL_CODEBASE: true # will parse the entire repository and find all files to validate across all types. NOTE: When set to false, only new or edited files will be parsed for validation.
          DEFAULT_BRANCH: master
          VALIDATE_YAML: true
          VALIDATE_JSON: true
          VALIDATE_MD: true
          VALIDATE_BASH: true # by default validates against POSIX rules, scripts using #!/bin/bash shebang
          VALIDATE_JAVASCRIPT_ES: true # (Utilizing: eslint)
          VALIDATE_DOCKER: true
          ACTIONS_RUNNER_DEBUG: false # Flag to enable additional information about the linter, versions, and additional output.
          DISABLE_ERROR: false # Flag to have the linter complete with exit code 0 even if errors were detected.
          DEFAULT_WORKSPACE: /tmp/lint
  validate-JSON-schema:
    name: validate-JSON-schema
    runs-on: ubuntu-latest
    steps:
      - name: Check out code.
        uses: actions/checkout@v2
      - name: Validate src/mission.json against JSON Schema
        uses: docker://orrosenblatt/validate-json-action:latest
        env:
          INPUT_SCHEMA: ./src/missions.schema.json
          INPUT_JSONS: ./src/missions.json
  uml-validation:
    name: uml-validation
    needs: super-linter
    runs-on: ubuntu-latest
    steps:
      - name: Check out code.
        uses: actions/checkout@v2
      - name: Validate UML
        uses: ./.github/actions/uml-validation
  react-deployment:
    runs-on: ubuntu-latest
    needs: uml-validation
    strategy:
      matrix:
        node-version: [12.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install Packages
      run: npm install
    - name: Lint application
      run: npm run lint
    - name: Test application
      run: CI=test npm run test
    - name: Run test coverage report
      run: npm run coverage
#    - name: Build application
#      run: npm run build
#    - name: Deploy to gh-pages
#      uses: peaceiris/actions-gh-pages@v3
#      with:
#        deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
#        publish_dir: ./build
  deploy-images:
    name: deploy-images
    needs: react-deployment
    runs-on: ubuntu-latest
    steps:
      - name: Check out code.
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Deploy Images
        shell: bash
        run: |
          echo "Following deployment of the gh-pages branch, need to fetching the images from the images folder of the master branch "
          echo " into the images folder of the gh-pages branch. This is done to facilitate sequence to sequence links."
          git branch -a
          #git checkout gh-pages
          # checkout the images folder from the master branch
          # the -- parameter indicates do not interpret any more arguments as command options.
          # and stage the files
          #git checkout master -- images
          git status
      - name: Commit changes
        uses: EndBug/add-and-commit@v4
        with:
          author_name: "tom-halpin"
          author_email: "tom_halpin@hotmail.com"
          message: "Deployed Images"
          add: "--all"
          #ref: "gh-pages" # commit is to gh-pages branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

