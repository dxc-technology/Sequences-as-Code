{"version":3,"sources":["sequences sync /^/.//.*$","sequences/sachelp/images/createnewinstance.svg","sequences/sachelp/images/devflow.svg","sequences/sachelp/images/mission.svg","sequences/sachelp/images/overview.svg","sequences/sachelp/images/prerequisites.svg","sequences/sachelp/images/publish.svg","sequences/sachelp/images/runlocally.svg","sequences/sachelp/images/search.svg","sequences/sachelp/images/sequence.svg","sequences/sachelp/images/updateinstance.svg","sequences/sachelp/uml/createnewinstance.uml","sequences/sachelp/uml/mission.uml","sequences/sachelp/uml/overview.uml","sequences/sachelp/uml/prerequisites.uml","sequences/sachelp/uml/publish.uml","sequences/sachelp/uml/runlocally.uml","sequences/sachelp/uml/search.uml","sequences/sachelp/uml/sequence.uml","sequences/sachelp/uml/updateinstance.uml","sequences/yourmission/images/yourmission.svg","sequences/yourmission/uml/yourmission.uml","components/SacMenu.js","pages/HomePage.js","components/ImageUrl.js","components/MissionPage.js","components/SearchPage.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","SacMenu","Navbar","bg","expand","Nav","className","to","sac","missions","mission","key","title","navlink","Component","HomePage","href","ImageUrl","require","this","props","url","target","description","PropTypes","string","MissionPage","component","sequences","sequence","heading","SearchPage","state","searchTitle","searchUMLTags","handleOnChangeTitle","event","setState","value","handleOnChangeUMLTags","handleSearchSequences","console","log","filter","toUpperCase","includes","umltags","findIndex","tag","toLowerCase","length","display","push","name","type","placeholder","onChange","onClick","App","exact","path","Home","render","Boolean","window","location","hostname","match","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.254f8516.chunk.js","sourcesContent":["var map = {\n\t\"./sachelp/images/createnewinstance.svg\": 49,\n\t\"./sachelp/images/devflow.svg\": 50,\n\t\"./sachelp/images/mission.svg\": 51,\n\t\"./sachelp/images/overview.svg\": 52,\n\t\"./sachelp/images/prerequisites.svg\": 53,\n\t\"./sachelp/images/publish.svg\": 54,\n\t\"./sachelp/images/runlocally.svg\": 55,\n\t\"./sachelp/images/search.svg\": 56,\n\t\"./sachelp/images/sequence.svg\": 57,\n\t\"./sachelp/images/updateinstance.svg\": 58,\n\t\"./sachelp/uml/createnewinstance.uml\": 59,\n\t\"./sachelp/uml/mission.uml\": 60,\n\t\"./sachelp/uml/overview.uml\": 61,\n\t\"./sachelp/uml/prerequisites.uml\": 62,\n\t\"./sachelp/uml/publish.uml\": 63,\n\t\"./sachelp/uml/runlocally.uml\": 64,\n\t\"./sachelp/uml/search.uml\": 65,\n\t\"./sachelp/uml/sequence.uml\": 66,\n\t\"./sachelp/uml/updateinstance.uml\": 67,\n\t\"./yourmission/images/yourmission.svg\": 68,\n\t\"./yourmission/uml/yourmission.uml\": 69\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 48;","module.exports = __webpack_public_path__ + \"static/media/createnewinstance.b818cf8f.svg\";","module.exports = __webpack_public_path__ + \"static/media/devflow.8e313385.svg\";","module.exports = __webpack_public_path__ + \"static/media/mission.114cd1ea.svg\";","module.exports = __webpack_public_path__ + \"static/media/overview.a6a56492.svg\";","module.exports = __webpack_public_path__ + \"static/media/prerequisites.388bc418.svg\";","module.exports = __webpack_public_path__ + \"static/media/publish.28b9831e.svg\";","module.exports = __webpack_public_path__ + \"static/media/runlocally.ba0e7dc5.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.eb8551c1.svg\";","module.exports = __webpack_public_path__ + \"static/media/sequence.4fd62309.svg\";","module.exports = __webpack_public_path__ + \"static/media/updateinstance.702c6ffc.svg\";","module.exports = __webpack_public_path__ + \"static/media/createnewinstance.c24a71a4.uml\";","module.exports = __webpack_public_path__ + \"static/media/mission.e1a8e6f0.uml\";","module.exports = __webpack_public_path__ + \"static/media/overview.a04d86db.uml\";","module.exports = __webpack_public_path__ + \"static/media/prerequisites.80f837ad.uml\";","module.exports = __webpack_public_path__ + \"static/media/publish.487bad3e.uml\";","module.exports = __webpack_public_path__ + \"static/media/runlocally.a2c8ef23.uml\";","module.exports = __webpack_public_path__ + \"static/media/search.0613aa22.uml\";","module.exports = __webpack_public_path__ + \"static/media/sequence.b97fb5f9.uml\";","module.exports = __webpack_public_path__ + \"static/media/updateinstance.f6d4e654.uml\";","module.exports = __webpack_public_path__ + \"static/media/yourmission.77b0b020.svg\";","module.exports = __webpack_public_path__ + \"static/media/yourmission.7207bd1b.uml\";","import React, { Component } from \"react\";\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav'\nimport { NavLink } from 'react-router-dom';\n\n// JSON Configuration Info\nimport sac from \"../missions\";\n\nclass SacMenu extends Component {\n\n  render() {\n\n    return (\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Nav className=\"mr-auto\">\n          <NavLink className='navBarBrandLink' to=\"/\">Home</NavLink>\n          {\n            //Build a Nav.Link for each mission in the JSON file\n            sac.missions.map((mission) => {\n              return (\n                <NavLink className='navBarLink' key={mission.id} to={mission.title}>{mission.navlink}</NavLink>\n              )\n            })\n          }\n          <NavLink className='navBarBrandLink' to=\"/SearchPage\">Search</NavLink>\n        </Nav>\n      </Navbar>\n    );\n  }\n}\n\nexport default SacMenu;\n","import React, { Fragment } from \"react\";\n\nconst HomePage = () => (\n  <Fragment>\n    <h1>SaC - Home</h1>\n    <div>\n      <p></p>\n      <p>Welcome.</p>\n      <p>To get started replace this content and the sample mission entitled Your Mission with your content and mission(s).</p>\n      <p>The details on how to do so are provided in the Sequences listed under the Help mission (top level menu option).</p>\n      <p>Additional information including some helpful tips &amp; tricks can be found in the <a className=\"pageLink\" href=\"https://github.com/dxc-technology/Sequences-as-Code/blob/master/README.md\">README.md</a> of the repository.</p>\n    </div>\n  </Fragment>\n);\n\nexport default HomePage;","\nimport React, { Component, Fragment } from \"react\";\nimport PropTypes from 'prop-types';\n\nclass ImageUrl extends Component {\n\n  static get propTypes() {\n    return {\n        title: PropTypes.string,\n        url: PropTypes.string,\n        description: PropTypes.string\n    };\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <div>\n        {\n          <a href={require(`../sequences/${this.props.title}/images/${this.props.url}`)}  target=\"sac\">{this.props.description}</a>\n        }\n        </div>\n      </Fragment>\n    )}\n}\n\nexport default ImageUrl;\n\n","import React, { Component, Fragment } from \"react\";\nimport PropTypes from 'prop-types';\n\n// JSON Configuration Info\nimport sac from \"../missions\";\nimport ImageUrl from \"./ImageUrl\";\n\nclass MissionPage extends Component {\n\n  static get propTypes() {\n    return {\n        title: PropTypes.string\n    };\n  }\n\n\trender() {\n\t\treturn (\n      <Fragment>\n          <div>\n            {\n              sac.missions.map((mission) => {\n                if(mission.title !== this.props.title) return null;\n                return (\n                  <div key={mission.id}>\n                    <h1>{mission.component}</h1>\n                    <div>\n                      <ul>\n                        {\n                          mission.sequences.map((sequence) => {\n                            if(sequence.heading===\"\"){\n                              return (\n                                <li key={sequence.id}>\n                                  <ImageUrl title={mission.title} url={sequence.url} description={sequence.description} />\n                                </li>\n                              );\n                            }\n                            return (\n                              <div key={sequence.id}>\n                                <h2>{sequence.heading}</h2>\n                                <li key={sequence.id}>\n                                  <ImageUrl title={mission.title} url={sequence.url} description={sequence.description} />\n                                </li>\n                              </div>\n                            );\n                          })\n                        }\n                      </ul>\n                    </div>\n                  </div>\n                );\n              })\n            }\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default MissionPage;","import React, { Component, Fragment } from \"react\";\nimport \"../index.css\";\n\n// JSON Configuration Info\nimport sac from \"../missions\";\nimport ImageUrl from \"./ImageUrl\";\n\nclass SearchPage extends Component {\n  state = {\n    searchTitle: \"\",\n    searchUMLTags: \"\",\n    sequences: []\n  };\n\n  handleOnChangeTitle = event => {\n    this.setState({ searchTitle: event.target.value });\n  };\n\n  handleOnChangeUMLTags = event => {\n    this.setState({ searchUMLTags: event.target.value });\n  };\n\n  handleSearchSequences = () => {\n\n    //console.log(\"handleSearchSequences:searchTitle: \", this.state.searchTitle);\n    console.log(\"handleSearchSequences:searchUMLTags: \", this.state.searchUMLTags);\n\n    var sequences = [];\n    this.setState({ sequences: [] });\n\n    if(this.state.searchTitle === \"\" && this.state.searchUMLTags === \"\")\n    {\n      return;\n    }\n\n    sac.missions.filter((mission) => {\n      return mission.sequences.filter((sequence) => {\n        if((sequence.description.toUpperCase().includes(this.state.searchTitle.toUpperCase())\n            && sequence.description !== \"\") &&\n           sequence.umltags.findIndex(tag => tag.toLowerCase().includes(this.state.searchUMLTags.toLowerCase())) > -1\n            && sequence.umltags.length > 0)\n        {\n          sequence.title = mission.title;\n          sequence.display = mission.component + \"->\" + sequence.description\n          sequences.push(sequence);\n          //console.log (\"found:\", sequence);\n        }\n        return sequences\n      });\n    });\n\n    this.setState({ sequences: sequences });\n\n    console.log(\"sequences: \", this.state.sequences);\n  };\n\n  render() {\n    //console.log(\"render sequences: \", this.state.sequences);\n    return (\n      <div id=\"searchSequences\">\n        <h1>Search Sequences</h1>\n        <h4>By Title</h4>\n        <input\n          id=\"searchSequencesInputTitle\"\n          name=\"text\"\n          type=\"text\"\n          placeholder=\"Enter full or partial sequence title to search for\"\n          onChange={event => this.handleOnChangeTitle(event)}\n          value={this.state.searchTitle}\n        />\n        <h4>By UML Tag</h4>\n        <input\n          id=\"searchSequencesInputUMLTag\"\n          name=\"text\"\n          type=\"text\"\n          placeholder=\"Enter full or partial sequence UML tag to search for\"\n          onChange={event => this.handleOnChangeUMLTags(event)}\n          value={this.state.searchUMLTags}\n        />\n        <button id=\"searchSequencesButton\" onClick={this.handleSearchSequences} type=\"submit\">Search</button>\n        { this.state.sequences.length > 0 ?\n          (\n            <Fragment>\n              <div>\n                <ul>\n                  {\n                    this.state.sequences.map((sequence) => {\n                      return (\n                        <li key={sequence.id}>\n                          <ImageUrl title={sequence.title} url={sequence.url} description={sequence.display} />\n                        </li>\n                      );\n                    })\n                  }\n                  </ul>\n              </div>\n            </Fragment>\n          )\n          :\n          (\n            <Fragment>\n              <h4>No sequences found with the specified key words in their titles or matching the specified UML tag.</h4>\n            </Fragment>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default SearchPage;","import React from 'react';\nimport { Route } from \"react-router-dom\";\n\n// JSON Configuration Info\nimport sac from \"./missions\";\n\n// Components and Pages\nimport SacMenu from \"./components/SacMenu\";\nimport Home from \"./pages/HomePage\";\nimport MissionPage from \"./components/MissionPage\";\nimport SearchPage from \"./components/SearchPage\";\n\n// STYLES\nimport \"./index.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst App = () => (\n  <div>\n    <SacMenu />\n    <div className=\"container\">\n      <Route exact={true} path=\"/\" component={Home}/>\n      {\n        /* build a route for each mission in the JSON file*/\n        sac.missions.map((mission) => {\n          return (\n            <Route key={mission.id} path={`/${mission.title}`} render={(props) => <MissionPage {...props} title={mission.title} />}/>\n          )\n        })\n      }\n      <Route exact={true} path=\"/SearchPage\" component={SearchPage}/>\n    </div>\n  </div>\n);\n\nexport default App;","/* istanbul ignore file */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and sequences on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/* istanbul ignore file */\nimport React from 'react';\nimport { render } from \"react-dom\";\n//import { BrowserRouter as Router } from \"react-router-dom\";\nimport { HashRouter } from 'react-router-dom'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// STYLES\nimport \"./index.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nrender(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n//ReactDOM.render(<App />, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}