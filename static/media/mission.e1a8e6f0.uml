@startuml

title

  <font color=purple><b>SaC Help</b></font> - Adding a new mission

end title

skinparam sequenceArrowColor Purple
skinparam sequenceParticipantBorderColor Purple
skinparam sequenceActorBorderColor Purple
skinparam sequenceLifeLineBorderColor Purple
actor Developer
participant "Start" as A #lightGreen
participant "Go to Clone" as B #white
participant "Open Editor" as C #white
participant "Create Mission" as D #white
participant "Test" as E #white
participant "Commit" as F #white
participant "Deploy" as G #orange


Developer -> A: Open a terminal session
Developer -> B: Go to your cloned copy of your dedicated instance of SaC
note right
   Clone will be of [[https://github.com/your_organization/your_repository{Right click to open in a new window or a new tab} Your repository]]
end note
Developer -> C: Open your editor of choice
Developer -> D: Create new Mission
note right
  Missions are defined in mission.json file in the src folder.
end note
note right
  Missions are comprised of sequences, each mission requires at least one sequence
  Each mission needs a dedicated folder in the sequences sub-directory
  Sequences are defined as code in the form of UML files added to the sequences's sub-directory
end note
Developer -> E: Update unit tests if necessary;
note right
  [[https://github.com/your_organization/your_repository{Right click to open in a new window or a new tab} Your repository]] was provided with some basic unit tests
  As you add content be sure to ensure the test coverage is maintained
end note
Developer -> F: Commit changes and verify workflow is green;
note right
  The continuous integration workflow automatically generates the SVG images from the UML files.
  If you want to generate the SVG files locally you can run the generatesvg.sh script to generate them from the sequence UML files;
end note
Developer -> G: Once changes are merged, thw workflow will deploy the changes.
note right
  You can also deploy the changes manually by running the command npm run deploy;
end note
@enduml