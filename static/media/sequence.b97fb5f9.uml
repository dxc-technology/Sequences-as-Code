@startuml

title

  <font color=purple><b>SaC Help</b></font> - Adding a new sequence

end title

skinparam sequenceArrowColor Purple
skinparam sequenceParticipantBorderColor Purple
skinparam sequenceActorBorderColor Purple
skinparam sequenceLifeLineBorderColor Purple
actor Developer
participant "Start" as A #lightGreen
participant "Go to Clone" as B #white
participant "Open Editor" as C #white
participant "Create Sequence" as D #white
participant "Link to Mission" as E #white
participant "Test" as F #white
participant "Commit" as G #white
participant "Deploy" as H #orange

Developer -> A: Open a terminal session
Developer -> B: Go to your cloned copy of your dedicated instance of SaC
note right
   Clone will be of [[https://github.com/your_organization/your_repository{Right click to open in a new window or a new tab} Your repository]]
end note
Developer -> C: Open your editor of choice
Developer -> D: Create a new Sequence diagram and add it to the designated mission's UML sub-folder
note right
  [[https://www.planttext.com/{Right click to open PlantUml in a new window or a new tab} PlantText]] can be used to create UML files.
  [[https://real-world-plantuml.com{Right click to open Real World PlantUml in a new window or a new tab} Real World PlantUml]] provides a wide set of UML samples.
end note
Developer -> E: Add the new sequence to designated mission in the mission.json file
Developer -> F: Update unit tests if necessary;
note right
  [[https://github.com/your_organization/your_repository{Right click to open in a new window or a new tab} Your repository]] was provided with some basic unit tests
  As you add content be sure to ensure the test coverage is maintained
end note
Developer -> G: Commit changes and verify workflow is green;
note right
  The continuous integration workflow automatically generates the SVG images from the UML files.
  If you want to generate the SVG files locally you can run the generatesvg.sh script to generate them from the sequence UML files;
end note
Developer -> H: Once changes are merged, thw workflow will deploy the changes.
note right
  You can also deploy the changes manually by running the command npm run deploy;
end note
@enduml